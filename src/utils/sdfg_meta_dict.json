{"__reverse_type_lookup__": {"typeclass": {"metatype": "typeclass", "desc": "", "category": "General", "default": "int32", "choices": ["bool", "bool_", "int8", "int16", "int32", "int64", "uint8", "uint16", "uint32", "uint64", "float16", "float32", "float64", "complex64", "complex128"]}, "tuple": {"metatype": "tuple", "desc": "", "category": "General", "default": []}, "bool": {"metatype": "bool", "desc": "", "category": "General", "default": false}, "StorageType": {"metatype": "StorageType", "desc": "Storage location", "category": "General", "default": "Default", "choices": ["Default", "Register", "CPU_Pinned", "CPU_Heap", "CPU_ThreadLocal", "GPU_Global", "GPU_Shared", "FPGA_Global", "FPGA_Local", "FPGA_Registers", "FPGA_ShiftRegister"]}, "AllocationLifetime": {"metatype": "AllocationLifetime", "desc": "Data allocation span", "category": "General", "default": "Scope", "choices": ["Scope", "State", "SDFG", "Global", "Persistent"]}, "dict": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "str"}, "DebugInfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "SymbolicProperty": {"metatype": "SymbolicProperty", "desc": "The total allocated size of the array. Can be used for padding.", "category": "General", "default": 1}, "list": {"metatype": "list", "desc": "Initial offset to translate all indices by.", "category": "General", "default": [], "element_type": "pystr_to_symbolic"}, "int": {"metatype": "int", "desc": "Allocation alignment in bytes (0 uses compiler-default)", "category": "General", "default": 0}, "SubsetProperty": {"metatype": "SubsetProperty", "desc": "Subset of elements to move from the data attached to this edge.", "category": "General", "default": null}, "DataProperty": {"metatype": "DataProperty", "desc": "Data descriptor attached to this memlet", "category": "General", "default": null}, "LambdaProperty": {"metatype": "LambdaProperty", "desc": "If set, defines a write-conflict resolution lambda function. The syntax of the lambda function receives two elements: `current` value and `new` value, and returns the value after resolution", "category": "General", "default": null}, "AccessType": {"metatype": "AccessType", "desc": "Type of access to this array", "category": "General", "default": "ReadWrite", "choices": ["ReadOnly", "WriteOnly", "ReadWrite"]}, "str": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "set": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "CodeBlock": {"metatype": "CodeBlock", "desc": "Tasklet code", "category": "General", "default": {"string_data": "", "language": "Python"}}, "InstrumentationType": {"metatype": "InstrumentationType", "desc": "Measure execution statistics with given method", "category": "General", "default": "No_Instrumentation", "choices": ["No_Instrumentation", "Timer", "PAPI_Counters", "GPU_Events", "FPGA"]}, "SDFGReferenceProperty": {"metatype": "SDFGReferenceProperty", "desc": "The SDFG", "category": "General", "default": null}, "ScheduleType": {"metatype": "ScheduleType", "desc": "SDFG schedule", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "Range": {"metatype": "Range", "desc": "Ranges of map parameters", "category": "General", "default": {"type": "Range", "ranges": []}, "indirected": true}, "LibraryImplementationProperty": {"metatype": "LibraryImplementationProperty", "desc": "Which implementation this library node will expand into.Must match a key in the list of possible implementations.", "category": "General", "default": null}, "Property": {"metatype": "Property", "desc": "A scalar which will be multiplied with A @ B before adding C", "category": "General", "default": 1}, "TilingType": {"metatype": "TilingType", "desc": "normal: the outerloop increments with tile_size, ceilrange: uses ceiling(N/tile_size) in outer range, number_of_tiles: tiles the map into the number of provided tiles, provide the number of tiles over tile_size", "category": "General", "default": "Normal", "choices": ["Normal", "CeilRange", "NumberOfTiles"]}, "DeviceType": {"category": "General", "metatype": "DeviceType", "choices": ["CPU", "GPU", "FPGA"]}, "Language": {"category": "General", "metatype": "Language", "choices": ["Python", "CPP", "OpenCL", "SystemVerilog", "MLIR"]}, "ReductionType": {"category": "General", "metatype": "ReductionType", "choices": ["Custom", "Min", "Max", "Sum", "Product", "Logical_And", "Bitwise_And", "Logical_Or", "Bitwise_Or", "Logical_Xor", "Bitwise_Xor", "Min_Location", "Max_Location", "Exchange", "Sub", "Div"]}, "Typeclasses": {"category": "General", "metatype": "Typeclasses", "choices": ["bool", "bool_", "int8", "int16", "int32", "int64", "uint8", "uint16", "uint32", "uint64", "float16", "float32", "float64", "complex64", "complex128"]}}, "__libs__": {"MatMul": "dace.libraries.blas.nodes.matmul.MatMul", "Dot": "dace.libraries.blas.nodes.dot.Dot", "Gemv": "dace.libraries.blas.nodes.gemv.Gemv", "Gemm": "dace.libraries.blas.nodes.gemm.Gemm", "Ger": "dace.libraries.blas.nodes.ger.Ger", "BatchedMatMul": "dace.libraries.blas.nodes.batched_matmul.BatchedMatMul", "Transpose": "dace.libraries.blas.nodes.transpose.Transpose", "Axpy": "dace.libraries.blas.nodes.axpy.Axpy", "CodeLibraryNode": "dace.libraries.standard.nodes.code.CodeLibraryNode", "Gearbox": "dace.libraries.standard.nodes.gearbox.Gearbox", "Reduce": "dace.libraries.standard.nodes.reduce.Reduce"}, "Data": {"dtype": {"metatype": "typeclass", "desc": "", "category": "General", "default": "int32", "choices": ["bool", "bool_", "int8", "int16", "int32", "int64", "uint8", "uint16", "uint32", "uint64", "float16", "float32", "float64", "complex64", "complex128"]}, "shape": {"metatype": "tuple", "desc": "", "category": "General", "default": []}, "transient": {"metatype": "bool", "desc": "", "category": "General", "default": false}, "storage": {"metatype": "StorageType", "desc": "Storage location", "category": "General", "default": "Default", "choices": ["Default", "Register", "CPU_Pinned", "CPU_Heap", "CPU_ThreadLocal", "GPU_Global", "GPU_Shared", "FPGA_Global", "FPGA_Local", "FPGA_Registers", "FPGA_ShiftRegister"]}, "lifetime": {"metatype": "AllocationLifetime", "desc": "Data allocation span", "category": "General", "default": "Scope", "choices": ["Scope", "State", "SDFG", "Global", "Persistent"]}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "str"}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}}, "Scalar": {"allow_conflicts": {"metatype": "bool", "desc": "", "category": "General", "default": false}, "dtype": {"metatype": "typeclass", "desc": "", "category": "General", "default": "int32", "choices": ["bool", "bool_", "int8", "int16", "int32", "int64", "uint8", "uint16", "uint32", "uint64", "float16", "float32", "float64", "complex64", "complex128"]}, "shape": {"metatype": "tuple", "desc": "", "category": "General", "default": []}, "transient": {"metatype": "bool", "desc": "", "category": "General", "default": false}, "storage": {"metatype": "StorageType", "desc": "Storage location", "category": "General", "default": "Default", "choices": ["Default", "Register", "CPU_Pinned", "CPU_Heap", "CPU_ThreadLocal", "GPU_Global", "GPU_Shared", "FPGA_Global", "FPGA_Local", "FPGA_Registers", "FPGA_ShiftRegister"]}, "lifetime": {"metatype": "AllocationLifetime", "desc": "Data allocation span", "category": "General", "default": "Scope", "choices": ["Scope", "State", "SDFG", "Global", "Persistent"]}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "str"}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}}, "Array": {"allow_conflicts": {"metatype": "bool", "desc": "If enabled, allows more than one memlet to write to the same memory location without conflict resolution.", "category": "General", "default": false}, "strides": {"metatype": "tuple", "desc": "For each dimension, the number of elements to skip in order to obtain the next element in that dimension.", "category": "General", "default": []}, "total_size": {"metatype": "SymbolicProperty", "desc": "The total allocated size of the array. Can be used for padding.", "category": "General", "default": 1}, "offset": {"metatype": "list", "desc": "Initial offset to translate all indices by.", "category": "General", "default": [], "element_type": "pystr_to_symbolic"}, "may_alias": {"metatype": "bool", "desc": "This pointer may alias with other pointers in the same function", "category": "General", "default": false}, "alignment": {"metatype": "int", "desc": "Allocation alignment in bytes (0 uses compiler-default)", "category": "General", "default": 0}, "dtype": {"metatype": "typeclass", "desc": "", "category": "General", "default": "int32", "choices": ["bool", "bool_", "int8", "int16", "int32", "int64", "uint8", "uint16", "uint32", "uint64", "float16", "float32", "float64", "complex64", "complex128"]}, "shape": {"metatype": "tuple", "desc": "", "category": "General", "default": []}, "transient": {"metatype": "bool", "desc": "", "category": "General", "default": false}, "storage": {"metatype": "StorageType", "desc": "Storage location", "category": "General", "default": "Default", "choices": ["Default", "Register", "CPU_Pinned", "CPU_Heap", "CPU_ThreadLocal", "GPU_Global", "GPU_Shared", "FPGA_Global", "FPGA_Local", "FPGA_Registers", "FPGA_ShiftRegister"]}, "lifetime": {"metatype": "AllocationLifetime", "desc": "Data allocation span", "category": "General", "default": "Scope", "choices": ["Scope", "State", "SDFG", "Global", "Persistent"]}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "str"}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}}, "Stream": {"offset": {"metatype": "list", "desc": "", "category": "General", "default": [], "element_type": "pystr_to_symbolic"}, "buffer_size": {"metatype": "SymbolicProperty", "desc": "Size of internal buffer.", "category": "General", "default": 0}, "dtype": {"metatype": "typeclass", "desc": "", "category": "General", "default": "int32", "choices": ["bool", "bool_", "int8", "int16", "int32", "int64", "uint8", "uint16", "uint32", "uint64", "float16", "float32", "float64", "complex64", "complex128"]}, "shape": {"metatype": "tuple", "desc": "", "category": "General", "default": []}, "transient": {"metatype": "bool", "desc": "", "category": "General", "default": false}, "storage": {"metatype": "StorageType", "desc": "Storage location", "category": "General", "default": "Default", "choices": ["Default", "Register", "CPU_Pinned", "CPU_Heap", "CPU_ThreadLocal", "GPU_Global", "GPU_Shared", "FPGA_Global", "FPGA_Local", "FPGA_Registers", "FPGA_ShiftRegister"]}, "lifetime": {"metatype": "AllocationLifetime", "desc": "Data allocation span", "category": "General", "default": "Scope", "choices": ["Scope", "State", "SDFG", "Global", "Persistent"]}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "str"}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}}, "View": {"allow_conflicts": {"metatype": "bool", "desc": "If enabled, allows more than one memlet to write to the same memory location without conflict resolution.", "category": "General", "default": false}, "strides": {"metatype": "tuple", "desc": "For each dimension, the number of elements to skip in order to obtain the next element in that dimension.", "category": "General", "default": []}, "total_size": {"metatype": "SymbolicProperty", "desc": "The total allocated size of the array. Can be used for padding.", "category": "General", "default": 1}, "offset": {"metatype": "list", "desc": "Initial offset to translate all indices by.", "category": "General", "default": [], "element_type": "pystr_to_symbolic"}, "may_alias": {"metatype": "bool", "desc": "This pointer may alias with other pointers in the same function", "category": "General", "default": false}, "alignment": {"metatype": "int", "desc": "Allocation alignment in bytes (0 uses compiler-default)", "category": "General", "default": 0}, "dtype": {"metatype": "typeclass", "desc": "", "category": "General", "default": "int32", "choices": ["bool", "bool_", "int8", "int16", "int32", "int64", "uint8", "uint16", "uint32", "uint64", "float16", "float32", "float64", "complex64", "complex128"]}, "shape": {"metatype": "tuple", "desc": "", "category": "General", "default": []}, "transient": {"metatype": "bool", "desc": "", "category": "General", "default": false}, "storage": {"metatype": "StorageType", "desc": "Storage location", "category": "General", "default": "Default", "choices": ["Default", "Register", "CPU_Pinned", "CPU_Heap", "CPU_ThreadLocal", "GPU_Global", "GPU_Shared", "FPGA_Global", "FPGA_Local", "FPGA_Registers", "FPGA_ShiftRegister"]}, "lifetime": {"metatype": "AllocationLifetime", "desc": "Data allocation span", "category": "General", "default": "Scope", "choices": ["Scope", "State", "SDFG", "Global", "Persistent"]}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "str"}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}}, "Memlet": {"volume": {"metatype": "SymbolicProperty", "desc": "The exact number of elements moved using this memlet, or the maximum number if dynamic=True (with 0 as unbounded)", "category": "General", "default": 0}, "dynamic": {"metatype": "bool", "desc": "Is the number of elements moved determined at runtime (e.g., data dependent)", "category": "General", "default": false}, "subset": {"metatype": "SubsetProperty", "desc": "Subset of elements to move from the data attached to this edge.", "category": "General", "default": null}, "other_subset": {"metatype": "SubsetProperty", "desc": "Subset of elements after reindexing to the data not attached to this edge (e.g., for offsets and reshaping).", "category": "General", "default": null}, "data": {"metatype": "DataProperty", "desc": "Data descriptor attached to this memlet", "category": "General", "default": null}, "wcr": {"metatype": "LambdaProperty", "desc": "If set, defines a write-conflict resolution lambda function. The syntax of the lambda function receives two elements: `current` value and `new` value, and returns the value after resolution", "category": "General", "default": null}, "debuginfo": {"metatype": "DebugInfo", "desc": "Line information to track source and generated code", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "wcr_nonatomic": {"metatype": "bool", "desc": "If True, always generates non-conflicting (non-atomic) writes in resulting code", "category": "General", "default": false}, "allow_oob": {"metatype": "bool", "desc": "Bypass out-of-bounds validation", "category": "General", "default": false}}, "Node": {"in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "AccessNode": {"access": {"metatype": "AccessType", "desc": "Type of access to this array", "category": "General", "default": "ReadWrite", "choices": ["ReadOnly", "WriteOnly", "ReadWrite"]}, "setzero": {"metatype": "bool", "desc": "Initialize to zero", "category": "General", "default": false}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "data": {"metatype": "DataProperty", "desc": "Data (array, stream, scalar) to access", "category": "General", "default": null}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "CodeNode": {"label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "Tasklet": {"code": {"metatype": "CodeBlock", "desc": "Tasklet code", "category": "General", "default": {"string_data": "", "language": "Python"}}, "state_fields": {"metatype": "list", "desc": "Fields that are added to the global state", "category": "General", "default": [], "element_type": "str"}, "code_global": {"metatype": "CodeBlock", "desc": "Global scope code needed for tasklet execution", "category": "General", "default": {"string_data": "", "language": "CPP"}}, "code_init": {"metatype": "CodeBlock", "desc": "Extra code that is called on DaCe runtime initialization", "category": "General", "default": {"string_data": "", "language": "CPP"}}, "code_exit": {"metatype": "CodeBlock", "desc": "Extra code that is called on DaCe runtime cleanup", "category": "General", "default": {"string_data": "", "language": "CPP"}}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "instrument": {"metatype": "InstrumentationType", "desc": "Measure execution statistics with given method", "category": "General", "default": "No_Instrumentation", "choices": ["No_Instrumentation", "Timer", "PAPI_Counters", "GPU_Events", "FPGA"]}, "label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "RTLTasklet": {"ip_cores": {"metatype": "dict", "desc": "A set of IP cores used by the tasklet.", "category": "General", "default": {}, "key_type": "str", "value_type": "dict"}, "code": {"metatype": "CodeBlock", "desc": "Tasklet code", "category": "General", "default": {"string_data": "", "language": "Python"}}, "state_fields": {"metatype": "list", "desc": "Fields that are added to the global state", "category": "General", "default": [], "element_type": "str"}, "code_global": {"metatype": "CodeBlock", "desc": "Global scope code needed for tasklet execution", "category": "General", "default": {"string_data": "", "language": "CPP"}}, "code_init": {"metatype": "CodeBlock", "desc": "Extra code that is called on DaCe runtime initialization", "category": "General", "default": {"string_data": "", "language": "CPP"}}, "code_exit": {"metatype": "CodeBlock", "desc": "Extra code that is called on DaCe runtime cleanup", "category": "General", "default": {"string_data": "", "language": "CPP"}}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "instrument": {"metatype": "InstrumentationType", "desc": "Measure execution statistics with given method", "category": "General", "default": "No_Instrumentation", "choices": ["No_Instrumentation", "Timer", "PAPI_Counters", "GPU_Events", "FPGA"]}, "label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "NestedSDFG": {"sdfg": {"metatype": "SDFGReferenceProperty", "desc": "The SDFG", "category": "General", "default": null}, "schedule": {"metatype": "ScheduleType", "desc": "SDFG schedule", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "symbol_mapping": {"metatype": "dict", "desc": "Mapping between internal symbols and their values, expressed as symbolic expressions", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "is_collapsed": {"metatype": "bool", "desc": "Show this node/scope/state as collapsed", "category": "General", "default": false}, "instrument": {"metatype": "InstrumentationType", "desc": "Measure execution statistics with given method", "category": "General", "default": "No_Instrumentation", "choices": ["No_Instrumentation", "Timer", "PAPI_Counters", "GPU_Events", "FPGA"]}, "no_inline": {"metatype": "bool", "desc": "If True, this nested SDFG will not be inlined in strict mode (in the InlineSDFG transformation)", "category": "General", "default": false}, "unique_name": {"metatype": "str", "desc": "Unique name of the SDFG", "category": "General", "default": ""}, "label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "MapEntry": {"label": {"metatype": "str", "desc": "Label of the map", "category": "General", "default": "", "indirected": true}, "params": {"metatype": "list", "desc": "Mapped parameters", "category": "General", "default": [], "indirected": true, "element_type": "str"}, "range": {"metatype": "Range", "desc": "Ranges of map parameters", "category": "General", "default": {"type": "Range", "ranges": []}, "indirected": true}, "schedule": {"metatype": "ScheduleType", "desc": "Map schedule", "category": "General", "default": "Default", "indirected": true, "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "unroll": {"metatype": "bool", "desc": "Map unrolling", "category": "General", "default": false, "indirected": true}, "collapse": {"metatype": "int", "desc": "How many dimensions to collapse into the parallel range", "category": "General", "default": 1, "indirected": true}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}, "indirected": true}, "is_collapsed": {"metatype": "bool", "desc": "Show this node/scope/state as collapsed", "category": "General", "default": false, "indirected": true}, "instrument": {"metatype": "InstrumentationType", "desc": "Measure execution statistics with given method", "category": "General", "default": "No_Instrumentation", "indirected": true, "choices": ["No_Instrumentation", "Timer", "PAPI_Counters", "GPU_Events", "FPGA"]}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "MapExit": {"in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "Map": {"label": {"metatype": "str", "desc": "Label of the map", "category": "General", "default": ""}, "params": {"metatype": "list", "desc": "Mapped parameters", "category": "General", "default": [], "element_type": "str"}, "range": {"metatype": "Range", "desc": "Ranges of map parameters", "category": "General", "default": {"type": "Range", "ranges": []}}, "schedule": {"metatype": "ScheduleType", "desc": "Map schedule", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "unroll": {"metatype": "bool", "desc": "Map unrolling", "category": "General", "default": false}, "collapse": {"metatype": "int", "desc": "How many dimensions to collapse into the parallel range", "category": "General", "default": 1}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "is_collapsed": {"metatype": "bool", "desc": "Show this node/scope/state as collapsed", "category": "General", "default": false}, "instrument": {"metatype": "InstrumentationType", "desc": "Measure execution statistics with given method", "category": "General", "default": "No_Instrumentation", "choices": ["No_Instrumentation", "Timer", "PAPI_Counters", "GPU_Events", "FPGA"]}}, "ConsumeEntry": {"label": {"metatype": "str", "desc": "Name of the consume node", "category": "General", "default": "", "indirected": true}, "pe_index": {"metatype": "str", "desc": "Processing element identifier", "category": "General", "default": "", "indirected": true}, "num_pes": {"metatype": "SymbolicProperty", "desc": "Number of processing elements", "category": "General", "default": 1, "indirected": true}, "condition": {"metatype": "CodeBlock", "desc": "Quiescence condition", "category": "General", "default": null, "indirected": true}, "schedule": {"metatype": "ScheduleType", "desc": "Consume schedule", "category": "General", "default": "Default", "indirected": true, "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "chunksize": {"metatype": "int", "desc": "Maximal size of elements to consume at a time", "category": "General", "default": 1, "indirected": true}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}, "indirected": true}, "is_collapsed": {"metatype": "bool", "desc": "Show this node/scope/state as collapsed", "category": "General", "default": false, "indirected": true}, "instrument": {"metatype": "InstrumentationType", "desc": "Measure execution statistics with given method", "category": "General", "default": "No_Instrumentation", "indirected": true, "choices": ["No_Instrumentation", "Timer", "PAPI_Counters", "GPU_Events", "FPGA"]}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "ConsumeExit": {"in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "Consume": {"label": {"metatype": "str", "desc": "Name of the consume node", "category": "General", "default": ""}, "pe_index": {"metatype": "str", "desc": "Processing element identifier", "category": "General", "default": ""}, "num_pes": {"metatype": "SymbolicProperty", "desc": "Number of processing elements", "category": "General", "default": 1}, "condition": {"metatype": "CodeBlock", "desc": "Quiescence condition", "category": "General", "default": null}, "schedule": {"metatype": "ScheduleType", "desc": "Consume schedule", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "chunksize": {"metatype": "int", "desc": "Maximal size of elements to consume at a time", "category": "General", "default": 1}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "is_collapsed": {"metatype": "bool", "desc": "Show this node/scope/state as collapsed", "category": "General", "default": false}, "instrument": {"metatype": "InstrumentationType", "desc": "Measure execution statistics with given method", "category": "General", "default": "No_Instrumentation", "choices": ["No_Instrumentation", "Timer", "PAPI_Counters", "GPU_Events", "FPGA"]}}, "PipelineEntry": {"init_size": {"metatype": "SymbolicProperty", "desc": "Number of initialization iterations.", "category": "General", "default": 0, "indirected": true}, "init_overlap": {"metatype": "bool", "desc": "Whether to increment regular map indices during initialization.", "category": "General", "default": true, "indirected": true}, "drain_size": {"metatype": "SymbolicProperty", "desc": "Number of drain iterations.", "category": "General", "default": 1, "indirected": true}, "drain_overlap": {"metatype": "bool", "desc": "Whether to increment regular map indices during pipeline drain.", "category": "General", "default": true, "indirected": true}, "additional_iterators": {"metatype": "dict", "desc": "Additional iterators, managed by the user inside the scope.", "category": "General", "default": {}, "indirected": true}, "label": {"metatype": "str", "desc": "Label of the map", "category": "General", "default": "", "indirected": true}, "params": {"metatype": "list", "desc": "Mapped parameters", "category": "General", "default": [], "indirected": true, "element_type": "str"}, "range": {"metatype": "Range", "desc": "Ranges of map parameters", "category": "General", "default": {"type": "Range", "ranges": []}, "indirected": true}, "schedule": {"metatype": "ScheduleType", "desc": "Map schedule", "category": "General", "default": "Default", "indirected": true, "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "unroll": {"metatype": "bool", "desc": "Map unrolling", "category": "General", "default": false, "indirected": true}, "collapse": {"metatype": "int", "desc": "How many dimensions to collapse into the parallel range", "category": "General", "default": 1, "indirected": true}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}, "indirected": true}, "is_collapsed": {"metatype": "bool", "desc": "Show this node/scope/state as collapsed", "category": "General", "default": false, "indirected": true}, "instrument": {"metatype": "InstrumentationType", "desc": "Measure execution statistics with given method", "category": "General", "default": "No_Instrumentation", "indirected": true, "choices": ["No_Instrumentation", "Timer", "PAPI_Counters", "GPU_Events", "FPGA"]}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "PipelineExit": {"in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "Pipeline": {"init_size": {"metatype": "SymbolicProperty", "desc": "Number of initialization iterations.", "category": "General", "default": 0}, "init_overlap": {"metatype": "bool", "desc": "Whether to increment regular map indices during initialization.", "category": "General", "default": true}, "drain_size": {"metatype": "SymbolicProperty", "desc": "Number of drain iterations.", "category": "General", "default": 1}, "drain_overlap": {"metatype": "bool", "desc": "Whether to increment regular map indices during pipeline drain.", "category": "General", "default": true}, "additional_iterators": {"metatype": "dict", "desc": "Additional iterators, managed by the user inside the scope.", "category": "General", "default": {}}, "label": {"metatype": "str", "desc": "Label of the map", "category": "General", "default": ""}, "params": {"metatype": "list", "desc": "Mapped parameters", "category": "General", "default": [], "element_type": "str"}, "range": {"metatype": "Range", "desc": "Ranges of map parameters", "category": "General", "default": {"type": "Range", "ranges": []}}, "schedule": {"metatype": "ScheduleType", "desc": "Map schedule", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "unroll": {"metatype": "bool", "desc": "Map unrolling", "category": "General", "default": false}, "collapse": {"metatype": "int", "desc": "How many dimensions to collapse into the parallel range", "category": "General", "default": 1}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "is_collapsed": {"metatype": "bool", "desc": "Show this node/scope/state as collapsed", "category": "General", "default": false}, "instrument": {"metatype": "InstrumentationType", "desc": "Measure execution statistics with given method", "category": "General", "default": "No_Instrumentation", "choices": ["No_Instrumentation", "Timer", "PAPI_Counters", "GPU_Events", "FPGA"]}}, "LibraryNode": {"name": {"metatype": "str", "desc": "Name of node", "category": "General", "default": ""}, "implementation": {"metatype": "LibraryImplementationProperty", "desc": "Which implementation this library node will expand into.Must match a key in the list of possible implementations.", "category": "General", "default": null}, "schedule": {"metatype": "ScheduleType", "desc": "If set, determines the default device mapping of the node upon expansion, if expanded to a nested SDFG.", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "SDFGState": {"is_collapsed": {"metatype": "bool", "desc": "Show this node/scope/state as collapsed", "category": "General", "default": false}, "nosync": {"metatype": "bool", "desc": "Do not synchronize at the end of the state", "category": "General", "default": false}, "instrument": {"metatype": "InstrumentationType", "desc": "Measure execution statistics with given method", "category": "General", "default": "No_Instrumentation", "choices": ["No_Instrumentation", "Timer", "PAPI_Counters", "GPU_Events", "FPGA"]}, "executions": {"metatype": "SymbolicProperty", "desc": "The number of times this state gets executed (0 stands for unbounded)", "category": "General", "default": 0}, "dynamic_executions": {"metatype": "bool", "desc": "The number of executions of this state is dynamic", "category": "General", "default": true}, "ranges": {"metatype": "dict", "desc": "Variable ranges, typically within loops", "category": "General", "default": {}, "key_type": "symbol", "value_type": "Range"}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}}, "InterstateEdge": {"assignments": {"metatype": "dict", "desc": "Assignments to perform upon transition (e.g., 'x=x+1; y = 0')", "category": "General", "default": {}}, "condition": {"metatype": "CodeBlock", "desc": "Transition condition", "category": "General", "default": {"string_data": "1", "language": "Python"}}}, "SDFG": {"arg_names": {"metatype": "list", "desc": "Ordered argument names (used for calling conventions).", "category": "General", "default": [], "element_type": "str"}, "constants_prop": {"metatype": "dict", "desc": "Compile-time constants", "category": "General", "default": {}}, "_arrays": {"metatype": "dict", "desc": "Data descriptors for this SDFG", "category": "General", "default": {}}, "symbols": {"metatype": "dict", "desc": "Global symbols for this SDFG", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "instrument": {"metatype": "InstrumentationType", "desc": "Measure execution statistics with given method", "category": "General", "default": "No_Instrumentation", "choices": ["No_Instrumentation", "Timer", "PAPI_Counters", "GPU_Events", "FPGA"]}, "global_code": {"metatype": "dict", "desc": "Code generated in a global scope on the output files.", "category": "General", "default": {}, "key_type": "str", "value_type": "CodeBlock"}, "init_code": {"metatype": "dict", "desc": "Code generated in the `__dace_init` function.", "category": "General", "default": {}, "key_type": "str", "value_type": "CodeBlock"}, "exit_code": {"metatype": "dict", "desc": "Code generated in the `__dace_exit` function.", "category": "General", "default": {}, "key_type": "str", "value_type": "CodeBlock"}, "orig_sdfg": {"metatype": "SDFGReferenceProperty", "desc": "", "category": "General", "default": null}, "transformation_hist": {"metatype": "list", "desc": "", "category": "General", "default": []}, "openmp_sections": {"metatype": "bool", "desc": "Whether to generate OpenMP sections in code", "category": "General", "default": true}}, "Transformation": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandTransformation": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "SubgraphTransformation": {"sdfg_id": {"metatype": "int", "desc": "ID of SDFG to transform", "category": "General", "default": 0}, "state_id": {"metatype": "int", "desc": "ID of state to transform subgraph within, or -1 to transform the SDFG", "category": "General", "default": 0}, "subgraph": {"metatype": "set", "desc": "Subgraph in transformation instance", "category": "General", "default": []}}, "SpecializeMatMul": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "dace.libraries.blas.nodes.matmul.MatMul": {"name": {"metatype": "str", "desc": "Name of node", "category": "General", "default": ""}, "implementation": {"metatype": "LibraryImplementationProperty", "desc": "Which implementation this library node will expand into.Must match a key in the list of possible implementations.", "category": "General", "default": null, "choices": ["specialize"]}, "schedule": {"metatype": "ScheduleType", "desc": "If set, determines the default device mapping of the node upon expansion, if expanded to a nested SDFG.", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "OpenBLAS": {}, "IntelMKL": {}, "cuBLAS": {}, "ExpandDotPure": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandDotOpenBLAS": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandDotMKL": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandDotCuBLAS": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandDotFpgaPartialSums": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandDotFpgaAccumulate": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "dace.libraries.blas.nodes.dot.Dot": {"n": {"metatype": "SymbolicProperty", "desc": "", "category": "General", "default": null}, "accumulator_type": {"metatype": "typeclass", "desc": "Accumulator or intermediate storage type", "category": "General", "default": null, "choices": ["bool", "bool_", "int8", "int16", "int32", "int64", "uint8", "uint16", "uint32", "uint64", "float16", "float32", "float64", "complex64", "complex128"]}, "name": {"metatype": "str", "desc": "Name of node", "category": "General", "default": ""}, "implementation": {"metatype": "LibraryImplementationProperty", "desc": "Which implementation this library node will expand into.Must match a key in the list of possible implementations.", "category": "General", "default": null, "choices": ["pure", "OpenBLAS", "MKL", "cuBLAS", "FPGA_PartialSums", "FPGA_Accumulate"]}, "schedule": {"metatype": "ScheduleType", "desc": "If set, determines the default device mapping of the node upon expansion, if expanded to a nested SDFG.", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "ExpandGemvPure": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandGemvFpgaAccumulate": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandGemvFpgaTilesByColumn": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandGemvCuBLAS": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandGemvOpenBLAS": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandGemvMKL": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandGemvPBLAS": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "dace.libraries.blas.nodes.gemv.Gemv": {"alpha": {"metatype": "SymbolicProperty", "desc": "", "category": "General", "default": 1}, "beta": {"metatype": "SymbolicProperty", "desc": "", "category": "General", "default": 0}, "transA": {"metatype": "bool", "desc": "Whether to transpose A before multiplying", "category": "General", "default": false}, "n": {"metatype": "SymbolicProperty", "desc": "", "category": "General", "default": null}, "m": {"metatype": "SymbolicProperty", "desc": "", "category": "General", "default": null}, "name": {"metatype": "str", "desc": "Name of node", "category": "General", "default": ""}, "implementation": {"metatype": "LibraryImplementationProperty", "desc": "Which implementation this library node will expand into.Must match a key in the list of possible implementations.", "category": "General", "default": null, "choices": ["pure", "OpenBLAS", "MKL", "cuBLAS", "FPGA_Accumulate", "FPGA_TilesByColumn", "PBLAS"]}, "schedule": {"metatype": "ScheduleType", "desc": "If set, determines the default device mapping of the node upon expansion, if expanded to a nested SDFG.", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "ExpandGemmPure": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandGemmOpenBLAS": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandGemmMKL": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandGemmCuBLAS": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandGemmPBLAS": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "dace.libraries.blas.nodes.gemm.Gemm": {"transA": {"metatype": "bool", "desc": "Whether to transpose A before multiplying", "category": "General", "default": false}, "transB": {"metatype": "bool", "desc": "Whether to transpose B before multiplying", "category": "General", "default": false}, "alpha": {"metatype": "Property", "desc": "A scalar which will be multiplied with A @ B before adding C", "category": "General", "default": 1}, "beta": {"metatype": "Property", "desc": "A scalar which will be multiplied with C before adding C", "category": "General", "default": 0}, "cin": {"metatype": "bool", "desc": "Whether to have a _cin connector when beta != 0", "category": "General", "default": true}, "algorithm": {"metatype": "str", "desc": "If applicable, chooses the vendor-provided implementation (algorithm) for the multiplication", "category": "General", "default": null}, "accumulator_type": {"metatype": "typeclass", "desc": "Accumulator or intermediate storage type used in multiplication", "category": "General", "default": null, "choices": ["bool", "bool_", "int8", "int16", "int32", "int64", "uint8", "uint16", "uint32", "uint64", "float16", "float32", "float64", "complex64", "complex128"]}, "compute_type": {"metatype": "str", "desc": "If applicable, overrides computation type (CUBLAS-specific, see ``cublasComputeType_t``)", "category": "General", "default": null}, "name": {"metatype": "str", "desc": "Name of node", "category": "General", "default": ""}, "implementation": {"metatype": "LibraryImplementationProperty", "desc": "Which implementation this library node will expand into.Must match a key in the list of possible implementations.", "category": "General", "default": null, "choices": ["pure", "MKL", "OpenBLAS", "cuBLAS", "PBLAS", "FPGA1DSystolic"]}, "schedule": {"metatype": "ScheduleType", "desc": "If set, determines the default device mapping of the node upon expansion, if expanded to a nested SDFG.", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "ExpandGerPure": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandGerFpga": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "dace.libraries.blas.nodes.ger.Ger": {"n_tile_size": {"metatype": "SymbolicProperty", "desc": "", "category": "General", "default": 1}, "m_tile_size": {"metatype": "SymbolicProperty", "desc": "", "category": "General", "default": 1}, "n": {"metatype": "SymbolicProperty", "desc": "", "category": "General", "default": "n"}, "m": {"metatype": "SymbolicProperty", "desc": "", "category": "General", "default": "m"}, "alpha": {"metatype": "SymbolicProperty", "desc": "A scalar which will be multiplied with the outer product x*yT before adding matrix A", "category": "General", "default": 1}, "name": {"metatype": "str", "desc": "Name of node", "category": "General", "default": ""}, "implementation": {"metatype": "LibraryImplementationProperty", "desc": "Which implementation this library node will expand into.Must match a key in the list of possible implementations.", "category": "General", "default": null, "choices": ["pure", "FPGA"]}, "schedule": {"metatype": "ScheduleType", "desc": "If set, determines the default device mapping of the node upon expansion, if expanded to a nested SDFG.", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "ExpandBatchedMatMulPure": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandBatchedMatMulMKL": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandBatchedMatMulOpenBLAS": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandBatchedMatMulCuBLAS": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "dace.libraries.blas.nodes.batched_matmul.BatchedMatMul": {"transA": {"metatype": "bool", "desc": "Whether to transpose A before multiplying", "category": "General", "default": false}, "transB": {"metatype": "bool", "desc": "Whether to transpose B before multiplying", "category": "General", "default": false}, "alpha": {"metatype": "Property", "desc": "A scalar which will be multiplied with A @ B before adding C", "category": "General", "default": 1}, "beta": {"metatype": "Property", "desc": "A scalar which will be multiplied with C before adding C", "category": "General", "default": 0}, "algorithm": {"metatype": "str", "desc": "If applicable, chooses the vendor-provided implementation (algorithm) for the multiplication", "category": "General", "default": null}, "accumulator_type": {"metatype": "typeclass", "desc": "Accumulator or intermediate storage type used in multiplication", "category": "General", "default": null, "choices": ["bool", "bool_", "int8", "int16", "int32", "int64", "uint8", "uint16", "uint32", "uint64", "float16", "float32", "float64", "complex64", "complex128"]}, "compute_type": {"metatype": "str", "desc": "If applicable, overrides computation type (CUBLAS-specific, see ``cublasComputeType_t``)", "category": "General", "default": null}, "name": {"metatype": "str", "desc": "Name of node", "category": "General", "default": ""}, "implementation": {"metatype": "LibraryImplementationProperty", "desc": "Which implementation this library node will expand into.Must match a key in the list of possible implementations.", "category": "General", "default": null, "choices": ["pure", "MKL", "OpenBLAS", "cuBLAS"]}, "schedule": {"metatype": "ScheduleType", "desc": "If set, determines the default device mapping of the node upon expansion, if expanded to a nested SDFG.", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "ExpandTransposePure": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandTransposeMKL": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandTransposeOpenBLAS": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandTransposeCuBLAS": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "dace.libraries.blas.nodes.transpose.Transpose": {"dtype": {"metatype": "typeclass", "desc": "", "category": "General", "default": null}, "name": {"metatype": "str", "desc": "Name of node", "category": "General", "default": ""}, "implementation": {"metatype": "LibraryImplementationProperty", "desc": "Which implementation this library node will expand into.Must match a key in the list of possible implementations.", "category": "General", "default": null, "choices": ["pure", "MKL", "OpenBLAS", "cuBLAS"]}, "schedule": {"metatype": "ScheduleType", "desc": "If set, determines the default device mapping of the node upon expansion, if expanded to a nested SDFG.", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "ExpandAxpyVectorized": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandAxpyFpga": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "dace.libraries.blas.nodes.axpy.Axpy": {"a": {"metatype": "SymbolicProperty", "desc": "", "category": "General", "default": "a"}, "n": {"metatype": "SymbolicProperty", "desc": "", "category": "General", "default": "n"}, "name": {"metatype": "str", "desc": "Name of node", "category": "General", "default": ""}, "implementation": {"metatype": "LibraryImplementationProperty", "desc": "Which implementation this library node will expand into.Must match a key in the list of possible implementations.", "category": "General", "default": null, "choices": ["pure", "fpga"]}, "schedule": {"metatype": "ScheduleType", "desc": "If set, determines the default device mapping of the node upon expansion, if expanded to a nested SDFG.", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "dace.libraries.standard.nodes.code.CodeLibraryNode": {"name": {"metatype": "str", "desc": "Name of node", "category": "General", "default": ""}, "implementation": {"metatype": "LibraryImplementationProperty", "desc": "Which implementation this library node will expand into.Must match a key in the list of possible implementations.", "category": "General", "default": null, "choices": ["default"]}, "schedule": {"metatype": "ScheduleType", "desc": "If set, determines the default device mapping of the node upon expansion, if expanded to a nested SDFG.", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "Expansion": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandGearbox": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "dace.libraries.standard.nodes.gearbox.Gearbox": {"size": {"metatype": "SymbolicProperty", "desc": "Number of wide vectors to convert to/from narrow vectors.", "category": "General", "default": 0}, "name": {"metatype": "str", "desc": "Name of node", "category": "General", "default": ""}, "implementation": {"metatype": "LibraryImplementationProperty", "desc": "Which implementation this library node will expand into.Must match a key in the list of possible implementations.", "category": "General", "default": null, "choices": ["pure"]}, "schedule": {"metatype": "ScheduleType", "desc": "If set, determines the default device mapping of the node upon expansion, if expanded to a nested SDFG.", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "CUDA": {}, "ExpandReducePure": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandReducePureSequentialDim": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandReduceOpenMP": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandReduceCUDADevice": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandReduceCUDABlock": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandReduceCUDABlockAll": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "ExpandReduceFPGAPartialReduction": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "dace.libraries.standard.nodes.reduce.Reduce": {"axes": {"metatype": "list", "desc": "", "category": "General", "default": null, "element_type": "int"}, "wcr": {"metatype": "LambdaProperty", "desc": "", "category": "General", "default": "(lambda a, b: a)"}, "identity": {"metatype": "Property", "desc": "", "category": "General", "default": null}, "name": {"metatype": "str", "desc": "Name of node", "category": "General", "default": ""}, "implementation": {"metatype": "LibraryImplementationProperty", "desc": "Which implementation this library node will expand into.Must match a key in the list of possible implementations.", "category": "General", "default": null, "choices": ["pure", "pure-seq", "OpenMP", "CUDA (device)", "CUDA (block)", "CUDA (block allreduce)", "FPGAPartialReduction"]}, "schedule": {"metatype": "ScheduleType", "desc": "If set, determines the default device mapping of the node upon expansion, if expanded to a nested SDFG.", "category": "General", "default": "Default", "choices": ["Default", "Sequential", "MPI", "CPU_Multicore", "Unrolled", "SVE_Map", "GPU_Default", "GPU_Device", "GPU_ThreadBlock", "GPU_ThreadBlock_Dynamic", "GPU_Persistent", "FPGA_Device"]}, "debuginfo": {"metatype": "DebugInfo", "desc": "", "category": "General", "default": {"type": "DebugInfo", "start_line": 0, "end_line": 0, "start_column": 0, "end_column": 0, "filename": null}}, "label": {"metatype": "str", "desc": "Name of the CodeNode", "category": "General", "default": ""}, "location": {"metatype": "dict", "desc": "Full storage location identifier (e.g., rank, GPU ID)", "category": "General", "default": {}, "key_type": "str", "value_type": "pystr_to_symbolic"}, "environments": {"metatype": "set", "desc": "Environments required by CMake to build and run this code node.", "category": "General", "default": []}, "in_connectors": {"metatype": "dict", "desc": "A set of input connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}, "out_connectors": {"metatype": "dict", "desc": "A set of output connectors for this node.", "category": "General", "default": {}, "key_type": "str", "value_type": "typeclass"}}, "MapCollapse": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "MapReduceFusion": {"no_init": {"metatype": "bool", "desc": "If enabled, does not create initialization states for reduce nodes with identity", "category": "General", "default": false}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "MapInterchange": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "MapDimShuffle": {"parameters": {"metatype": "tuple", "desc": "Desired order of map parameters", "category": "General", "default": []}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "MapUnroll": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "TrivialMapElimination": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "TrivialMapRangeElimination": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "StripMining": {"dim_idx": {"metatype": "int", "desc": "Index of dimension to be strip-mined", "category": "General", "default": -1}, "new_dim_prefix": {"metatype": "str", "desc": "Prefix for new dimension name", "category": "General", "default": "tile"}, "tile_size": {"metatype": "SymbolicProperty", "desc": "Tile size of strip-mined dimension, or number of tiles if tiling_type=number_of_tiles", "category": "General", "default": 64}, "tile_stride": {"metatype": "SymbolicProperty", "desc": "Stride between two tiles of the strip-mined dimension. If zero, it is set equal to the tile size.", "category": "General", "default": 0}, "tile_offset": {"metatype": "SymbolicProperty", "desc": "Tile stride offset (negative)", "category": "General", "default": 0}, "divides_evenly": {"metatype": "bool", "desc": "Tile size divides dimension range evenly?", "category": "General", "default": false}, "strided": {"metatype": "bool", "desc": "Continuous (false) or strided (true) elements in tile", "category": "General", "default": false}, "tiling_type": {"metatype": "TilingType", "desc": "normal: the outerloop increments with tile_size, ceilrange: uses ceiling(N/tile_size) in outer range, number_of_tiles: tiles the map into the number of provided tiles, provide the number of tiles over tile_size", "category": "General", "default": "Normal", "choices": ["Normal", "CeilRange", "NumberOfTiles"]}, "skew": {"metatype": "bool", "desc": "If True, offsets inner tile back such that it starts with zero", "category": "General", "default": false}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "MapTiling": {"prefix": {"metatype": "str", "desc": "Prefix for new range symbols", "category": "General", "default": "tile"}, "tile_sizes": {"metatype": "tuple", "desc": "Tile size per dimension", "category": "General", "default": ["128", "128", "128"]}, "strides": {"metatype": "tuple", "desc": "Tile stride (enables overlapping tiles). If empty, matches tile", "category": "General", "default": []}, "tile_offset": {"metatype": "tuple", "desc": "Negative Stride offset per dimension", "category": "General", "default": null}, "divides_evenly": {"metatype": "bool", "desc": "Tile size divides dimension length evenly", "category": "General", "default": false}, "tile_trivial": {"metatype": "bool", "desc": "Tiles even if tile_size is 1", "category": "General", "default": false}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "MapTilingWithOverlap": {"lower_overlap": {"metatype": "tuple", "desc": "Lower overlap per dimension", "category": "General", "default": []}, "upper_overlap": {"metatype": "tuple", "desc": "Upper overlap per dimension", "category": "General", "default": []}, "prefix": {"metatype": "str", "desc": "Prefix for new range symbols", "category": "General", "default": "tile"}, "tile_sizes": {"metatype": "tuple", "desc": "Tile size per dimension", "category": "General", "default": ["128", "128", "128"]}, "strides": {"metatype": "tuple", "desc": "Tile stride (enables overlapping tiles). If empty, matches tile", "category": "General", "default": []}, "tile_offset": {"metatype": "tuple", "desc": "Negative Stride offset per dimension", "category": "General", "default": null}, "divides_evenly": {"metatype": "bool", "desc": "Tile size divides dimension length evenly", "category": "General", "default": false}, "tile_trivial": {"metatype": "bool", "desc": "Tiles even if tile_size is 1", "category": "General", "default": false}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "BufferTiling": {"tile_sizes": {"metatype": "tuple", "desc": "Tile size per dimension", "category": "General", "default": ["128", "128", "128"]}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "Vectorization": {"vector_len": {"metatype": "int", "desc": "Vector length", "category": "General", "default": 4}, "propagate_parent": {"metatype": "bool", "desc": "Propagate vector length through parent SDFGs", "category": "General", "default": false}, "strided_map": {"metatype": "bool", "desc": "Use strided map range (jump by vector length) instead of modifying memlets", "category": "General", "default": true}, "preamble": {"metatype": "bool", "desc": "Force creation or skipping a preamble map without vectors", "category": "General", "default": null}, "postamble": {"metatype": "bool", "desc": "Force creation or skipping a postamble map without vectors", "category": "General", "default": null}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "StreamTransient": {"with_buffer": {"metatype": "bool", "desc": "Use an intermediate buffer for accumulation", "category": "General", "default": true}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "AccumulateTransient": {"array": {"metatype": "str", "desc": "Array to create local storage for (if empty, first available)", "category": "General", "default": null}, "identity": {"metatype": "SymbolicProperty", "desc": "Identity value to set", "category": "General", "default": null}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "LocalStorage": {"array": {"metatype": "str", "desc": "Array to create local storage for (if empty, first available)", "category": "General", "default": null}, "prefix": {"metatype": "str", "desc": "Prefix for new data node", "category": "General", "default": "trans_"}, "create_array": {"metatype": "bool", "desc": "if false, it does not create a new array.", "category": "General", "default": true}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "InLocalStorage": {"array": {"metatype": "str", "desc": "Array to create local storage for (if empty, first available)", "category": "General", "default": null}, "prefix": {"metatype": "str", "desc": "Prefix for new data node", "category": "General", "default": "trans_"}, "create_array": {"metatype": "bool", "desc": "if false, it does not create a new array.", "category": "General", "default": true}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "OutLocalStorage": {"array": {"metatype": "str", "desc": "Array to create local storage for (if empty, first available)", "category": "General", "default": null}, "prefix": {"metatype": "str", "desc": "Prefix for new data node", "category": "General", "default": "trans_"}, "create_array": {"metatype": "bool", "desc": "if false, it does not create a new array.", "category": "General", "default": true}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "StreamingMemory": {"buffer_size": {"metatype": "int", "desc": "Set buffer size for the newly-created stream", "category": "General", "default": 1}, "storage": {"metatype": "StorageType", "desc": "Set storage type for the newly-created stream", "category": "General", "default": "Default", "choices": ["Default", "Register", "CPU_Pinned", "CPU_Heap", "CPU_ThreadLocal", "GPU_Global", "GPU_Shared", "FPGA_Global", "FPGA_Local", "FPGA_Registers", "FPGA_ShiftRegister"]}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "StreamingComposition": {"buffer_size": {"metatype": "int", "desc": "Set buffer size for the newly-created stream", "category": "General", "default": 1}, "storage": {"metatype": "StorageType", "desc": "Set storage type for the newly-created stream", "category": "General", "default": "Default", "choices": ["Default", "Register", "CPU_Pinned", "CPU_Heap", "CPU_ThreadLocal", "GPU_Global", "GPU_Shared", "FPGA_Global", "FPGA_Local", "FPGA_Registers", "FPGA_ShiftRegister"]}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "TrivialTaskletElimination": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "CopyToDevice": {"storage": {"metatype": "StorageType", "desc": "Nested SDFG storage", "category": "General", "default": "Default", "choices": ["Default", "Register", "CPU_Pinned", "CPU_Heap", "CPU_ThreadLocal", "GPU_Global", "GPU_Shared", "FPGA_Global", "FPGA_Local", "FPGA_Registers", "FPGA_ShiftRegister"]}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "GPUTransformMap": {"fullcopy": {"metatype": "bool", "desc": "Copy whole arrays rather than used subset", "category": "General", "default": false}, "toplevel_trans": {"metatype": "bool", "desc": "Make all GPU transients top-level", "category": "General", "default": false}, "register_trans": {"metatype": "bool", "desc": "Make all transients inside GPU maps registers", "category": "General", "default": false}, "sequential_innermaps": {"metatype": "bool", "desc": "Make all internal maps Sequential", "category": "General", "default": false}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "GPUTransformLocalStorage": {"fullcopy": {"metatype": "bool", "desc": "Copy whole arrays rather than used subset", "category": "General", "default": false}, "nested_seq": {"metatype": "bool", "desc": "Makes nested code semantically-equivalent to single-core code,transforming nested maps and memory into sequential and local memory respectively.", "category": "General", "default": true}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "MPITransformMap": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "WarpTiling": {"warp_size": {"metatype": "int", "desc": "Hardware warp size", "category": "General", "default": 32}, "replicate_maps": {"metatype": "bool", "desc": "Replicate tiled maps that lead to multiple other tiled maps", "category": "General", "default": true}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "BankSplit": {"split_array_info": {"metatype": "Property", "desc": "Describes how many times this array is split in each dimension, where the k-th number describes how many times dimension k is split. If the k-th number is 1 this means that the array is not split in the k-th dimension at all. If None, then the transform will split the first dimension exactly shape[0] times.", "category": "General", "default": null}, "default_to_storage": {"metatype": "StorageType", "desc": "The storage type of involved arrays will be set to the value of this property if they have Default storage type. ", "category": "General", "default": "CPU_Heap"}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "MatrixProductTranspose": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "GPUPersistentKernel": {"validate": {"metatype": "bool", "desc": "Validate the sdfg and the nested sdfg", "category": "General", "default": true}, "include_in_assignment": {"metatype": "bool", "desc": "Wether to include global variable assignments of the edge going into the kernel inside the kernel or have it happen on the outside. If the assignment is needed in the kernel, it needs to be included.", "category": "General", "default": true}, "kernel_prefix": {"metatype": "str", "desc": "Name of the kernel. If no value is given the kerenl will be refrenced as `kernel`, if a value is given the kernel will be named `<kernel_prefix>_kernel`. This is useful if multiple kernels are created.", "category": "General", "default": ""}, "sdfg_id": {"metatype": "int", "desc": "ID of SDFG to transform", "category": "General", "default": 0}, "state_id": {"metatype": "int", "desc": "ID of state to transform subgraph within, or -1 to transform the SDFG", "category": "General", "default": 0}, "subgraph": {"metatype": "set", "desc": "Subgraph in transformation instance", "category": "General", "default": []}}, "ReduceExpansion": {"debug": {"metatype": "bool", "desc": "Debug Info", "category": "General", "default": false}, "create_in_transient": {"metatype": "bool", "desc": "Create local in-transientin registers", "category": "General", "default": false}, "create_out_transient": {"metatype": "bool", "desc": "Create local out-transientin registers", "category": "General", "default": false}, "reduce_implementation": {"metatype": "str", "desc": "Reduce implementation of inner reduce. If specified,overrides any existing implementations", "category": "General", "default": null}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "MultiExpansion": {"debug": {"metatype": "bool", "desc": "Debug Mode", "category": "General", "default": false}, "sequential_innermaps": {"metatype": "bool", "desc": "Make all inner maps that arecreated during expansion sequential", "category": "General", "default": false}, "check_contiguity": {"metatype": "bool", "desc": "Don't allow expansion if last (contiguous)dimension is partially split", "category": "General", "default": false}, "permutation_only": {"metatype": "bool", "desc": "Only allow permutations without inner splits", "category": "General", "default": false}, "allow_offset": {"metatype": "bool", "desc": "Offset ranges to zero", "category": "General", "default": true}, "sdfg_id": {"metatype": "int", "desc": "ID of SDFG to transform", "category": "General", "default": 0}, "state_id": {"metatype": "int", "desc": "ID of state to transform subgraph within, or -1 to transform the SDFG", "category": "General", "default": 0}, "subgraph": {"metatype": "set", "desc": "Subgraph in transformation instance", "category": "General", "default": []}}, "SubgraphFusion": {"debug": {"metatype": "bool", "desc": "Show debug info", "category": "General", "default": false}, "transient_allocation": {"metatype": "StorageType", "desc": "Storage Location to push transients to that are fully contained within the subgraph.", "category": "General", "default": "Default", "choices": ["Default", "Register", "CPU_Pinned", "CPU_Heap", "CPU_ThreadLocal", "GPU_Global", "GPU_Shared", "FPGA_Global", "FPGA_Local", "FPGA_Registers", "FPGA_ShiftRegister"]}, "schedule_innermaps": {"metatype": "ScheduleType", "desc": "Schedule of inner maps. If none, keeps schedule.", "category": "General", "default": null}, "consolidate": {"metatype": "bool", "desc": "Consolidate edges that enter and exit the fused map.", "category": "General", "default": false}, "propagate": {"metatype": "bool", "desc": "Propagate memlets of edges that enter and exit the fused map.Disable if this causes problems (e.g., if memlet propagation doesnot work correctly).", "category": "General", "default": true}, "disjoint_subsets": {"metatype": "bool", "desc": "Check for disjoint subsets in can_be_applied. If multipleaccess nodes pointing to the same data appear within a subgraphto be fused, this check confirms that their access sets areindependent per iteration space to avoid race conditions.", "category": "General", "default": true}, "keep_global": {"metatype": "list", "desc": "A list of array names to treat as non-transients and not compress", "category": "General", "default": [], "element_type": "str"}, "sdfg_id": {"metatype": "int", "desc": "ID of SDFG to transform", "category": "General", "default": 0}, "state_id": {"metatype": "int", "desc": "ID of state to transform subgraph within, or -1 to transform the SDFG", "category": "General", "default": 0}, "subgraph": {"metatype": "set", "desc": "Subgraph in transformation instance", "category": "General", "default": []}}, "FPGATransformSDFG": {"promote_global_trans": {"metatype": "bool", "desc": "If True, transient arrays that are fully internal are pulled out so that they can be allocated on the host.", "category": "General", "default": true}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "GPUTransformSDFG": {"toplevel_trans": {"metatype": "bool", "desc": "Make all GPU transients top-level", "category": "General", "default": true}, "register_trans": {"metatype": "bool", "desc": "Make all transients inside GPU maps registers", "category": "General", "default": true}, "sequential_innermaps": {"metatype": "bool", "desc": "Make all internal maps Sequential", "category": "General", "default": true}, "skip_scalar_tasklets": {"metatype": "bool", "desc": "If True, does not transform tasklets that manipulate (Default-stored) scalars", "category": "General", "default": true}, "strict_transform": {"metatype": "bool", "desc": "Reapply strict transformations after modifying graph", "category": "General", "default": true}, "exclude_copyin": {"metatype": "str", "desc": "Exclude these arrays from being copied into the device (comma-separated)", "category": "General", "default": ""}, "exclude_tasklets": {"metatype": "str", "desc": "Exclude these tasklets from being processed as CPU tasklets (comma-separated)", "category": "General", "default": ""}, "exclude_copyout": {"metatype": "str", "desc": "Exclude these arrays from being copied out of the device (comma-separated)", "category": "General", "default": ""}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "InlineSDFG": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "InlineTransients": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "RefineNestedAccess": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "NestSDFG": {"promote_global_trans": {"metatype": "bool", "desc": "Promotes transients to be allocated once", "category": "General", "default": false}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "LoopUnroll": {"count": {"metatype": "int", "desc": "Number of iterations to unroll, or zero for all iterations (loop must be constant-sized for 0)", "category": "General", "default": 0}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "LoopPeeling": {"begin": {"metatype": "bool", "desc": "If True, peels loop from beginning (first `count` iterations), otherwise peels last `count` iterations.", "category": "General", "default": true}, "count": {"metatype": "int", "desc": "Number of iterations to unroll, or zero for all iterations (loop must be constant-sized for 0)", "category": "General", "default": 0}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "LoopToMap": {"itervar": {"metatype": "str", "desc": "The name of the iteration variable (optional).", "category": "General", "default": null}, "sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "InlineMultistateSDFG": {"sdfg_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "state_id": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}, "_subgraph": {"metatype": "dict", "desc": "", "category": "(Debug)", "default": {}, "key_type": "int", "value_type": "int"}, "expr_index": {"metatype": "int", "desc": "", "category": "(Debug)", "default": 0}}, "StencilTiling": {"debug": {"metatype": "bool", "desc": "Debug mode", "category": "General", "default": false}, "prefix": {"metatype": "str", "desc": "Prefix for new inner tiled range symbols", "category": "General", "default": "stencil"}, "strides": {"metatype": "tuple", "desc": "Tile stride", "category": "General", "default": ["1"]}, "schedule": {"metatype": "ScheduleType", "desc": "Dace.Dtypes.ScheduleType of Inner Maps", "category": "General", "default": "Default"}, "unroll_loops": {"metatype": "bool", "desc": "Unroll Inner Loops if they have Size > 1", "category": "General", "default": false}, "sdfg_id": {"metatype": "int", "desc": "ID of SDFG to transform", "category": "General", "default": 0}, "state_id": {"metatype": "int", "desc": "ID of state to transform subgraph within, or -1 to transform the SDFG", "category": "General", "default": 0}, "subgraph": {"metatype": "set", "desc": "Subgraph in transformation instance", "category": "General", "default": []}}}